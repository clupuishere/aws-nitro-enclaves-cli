name: CI

on: [push, pull_request]

env:
  RUSTFLAGS: -Dwarnings

jobs:
  build:
    name: Test on rust ${{matrix.rust}}  (keys ${{ matrix.key_feature_set }})
    environment: pr-workflow-approval
    runs-on: ubuntu-latest
    strategy:
      matrix:
          rust: [1.60.0, stable, nightly]
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{matrix.rust}}
    - uses: Swatinem/rust-cache@v2
    - run: cargo build --all --locked

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: rustup component add clippy
    - run: cargo clippy --all

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: rustup component add rustfmt
    - run: cargo fmt --all -- --check

  audit:
    name: Check dependencies for security issues
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: cargo install --locked --version "~0.17" cargo-audit
    - run: cargo audit --ignore RUSTSEC-2020-0159 --ignore RUSTSEC-2020-0071

  license:
    name: Check dependencies for licenses
    runs-on: ubuntu-latest
    outputs:
      license_changed: ${{ steps.license_diff.outputs.license_changed }}
    steps:
    - uses: actions/checkout@v3
    - uses: dtolnay/rust-toolchain@stable
    - uses: Swatinem/rust-cache@v2
    - run: cargo install --locked --version "~0.5" cargo-about
    - run: cargo about generate --workspace --output-file "${{ runner.temp }}/licenses.html" about.hbs
    - id: license_diff
      run: |
        if diff -q THIRD_PARTY_LICENSES_RUST_CRATES.html ${{ runner.temp }}/licenses.html ; then
          echo "license_changed=NO" >> $GITHUB_OUTPUT
        else
          echo "license_changed=YES" >> $GITHUB_OUTPUT
        fi
  myapprove:
    name: My approve
    runs-on: ubuntu-latest
    steps:
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: clupuishere
          minimum-approvals: 1
          issue-title: "Deploying v1.3.5 to prod from staging"
          issue-body: "Please approve or deny the deployment of version v1.3.5."
          exclude-workflow-initiator-as-approver: false
          additional-approved-words: ''
          additional-denied-words: ''


